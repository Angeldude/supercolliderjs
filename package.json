{
  "name": "supercolliderjs",
  "description": "JavaScript library for the SuperCollider music language and synthesis server",
  "version": "0.14.1",
  "author": "Chris Sattinger <crucialfelix@gmail.com>",
  "contributors": [
    {
      "name": "Chris Sattinger",
      "email": "crucialfelix@gmail.com"
    }
  ],
  "dependencies": {
    "bluebird": "^3.5.0",
    "chalk": "^1.1.3",
    "commander": "^2.9.0",
    "cuid": "^1.3.8",
    "dryadic": "^0.3.0",
    "immutable": "^3.8.1",
    "js-yaml": "^3.7.0",
    "lodash": "^4.17.2",
    "ncp": "^2.0.0",
    "osc-min": "^1.1.1",
    "rx": "^4.1.0",
    "temp": "~0.8.3",
    "untildify": "^3.0.2"
  },
  "devDependencies": {
    "babel": "^6.23.0",
    "babel-cli": "^6.24.0",
    "babel-eslint": "^7.2.0",
    "babel-jest": "^19.0.0",
    "babel-plugin-transform-class-properties": "^6.19.0",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-preset-es2015": "^6.24.0",
    "baconjs": "^0.7.92",
    "eslint": "^3.18.0",
    "eslint-plugin-flowtype": "^2.30.4",
    "jest": "^19.0.2"
  },
  "license": "MIT",
  "keywords": [
    "supercollider",
    "synthesis",
    "music",
    "sound",
    "creative-coding",
    "creative"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/crucialfelix/supercolliderjs"
  },
  "main": "lib/index",
  "bin": {
    "supercollider-server": "./bin/scsynth.js",
    "supercollider": "./bin/sclang.js",
    "export-supercollider": "./bin/export-supercollider.js",
    "compile-synthdefs": "./bin/compile-synthdefs.js"
  },
  "scripts": {
    "test": "jest && npm run lint",
    "lint": "eslint -c .eslintrc src bin",
    "jest": "npm run build && jest --watch",
    "compile": "babel --source-maps --out-dir=./lib src",
    "watch": "babel --watch --source-maps --out-dir=./lib src",
    "copy": "cp src/server/*.json lib/server/ && cp -R src/supercollider-js lib/",
    "build": "npm run compile && npm run copy",
    "prepublish": "npm run build",
    "postinstall": "node -e \"require('fs').stat('lib', function (e, s) { process.exit(e || !s.isDirectory() ? 1 : 0) })\" || npm run build"
  },
  "jest": {
    "transform": {
      ".*": "<rootDir>/node_modules/babel-jest"
    },
    "roots": [
      "src"
    ],
    "moduleFileExtensions": [
      "js",
      "json"
    ],
    "collectCoverage": true
  },
  "engines": {
    "node": ">=4 <7"
  }
}
